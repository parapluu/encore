bundle Timer where

embed
#include <sys/time.h>
end

-- A Timer class for measuring wall clock time.
passive class Timer {
  start : embed struct timeval end
  started : bool

  -- Start the timer, or reset it (in case it has been started
  -- already).
  def tik() : void {
    let start = this.start in {
      embed void
      gettimeofday(&#{start}, NULL);
      end;
      this.start = start
    };
    this.started = true
  }

  -- Stop the timer, and return the wall clock time passed since
  -- tik() in microseconds. This does *not* reset the timer.
  def tok() : int {
    assertTrue(this.started);
    let
      start = this.start
      diff = 0
    in {
      embed void
      struct timeval now;
      gettimeofday(&now, NULL);
      #{diff} = now.tv_sec - #{start}.tv_sec;
      #{diff} *= 1000000;
      #{diff} += (now.tv_usec - #{start}.tv_usec);
      end;
      diff
    }
  }
}
