-- This file was automatically converted by encorec

module StreamChain
typedef Scons = EMBED struct scons* END
fun chain[a, b](sa : Stream[a], f : a -> b) : Stream[b]
  let
    futa = EMBED (Fut[Scons])
             (future_t*)#{sa};
           END
    fscons = fun (scons : Scons)
               if
                 EMBED (bool)
                   scons_eos(_ctx,(struct scons*)#{scons});
                 END
               then
                 EMBED (Scons)
                   scons_end(_ctx);

                 END
               else
                 val va = EMBED (a)
                            (encore_arg_t)scons_element(_ctx,(struct scons*)#{scons}).p;
                          END
                 val nexta = EMBED (Stream[a])
                               scons_next(_ctx,(struct scons*)#{scons});
                             END
                 val vb = f(va)
                 val nextb = chain[a, b](nexta, f)
                 EMBED (Scons)
                   scons_put_fut(_ctx,#{nextb},(encore_arg_t)#{vb}, _enc__type_b);
                 END
               end
             end
    futb = EMBED (Stream[b])
             (stream_t*)future_chain_actor(_ctx, #{futa}, get_scons_type(), #{fscons});
           END
  in
    EMBED (Stream[b])
      (stream_t*)#{futb};
    END
  end
end
