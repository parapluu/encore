class Agent
  id: int
  next: Agent

  def init(id: int): void {
    this.id = id;
    this.next = null;
  }

  def add(a: Agent): Agent {
    this.next = a;
    this.next;
  }

  def pass(hops: int): void {
    print("Hops: {}, id: {}\n", hops, this.id);
    if(hops > 0) then {
      this.next.pass(hops-1); -- get causes a deadlock
      ();
    } else {
      print("Finish: {}\n", this.id);
    }
  }


class Main
  def main(): Fut void {
    let 
      -- number of agents should be 1 digit (< 10)
      n_agents = 9
      hops = 100000
      first_agent = new Agent(503)
      prev_agent = new Agent(502)
    in {
      --
      -- Setup the agents
      --
      get first_agent.add(prev_agent);
      while(n_agents-2 > 0){
        -- do not remove get.
	--let a = new Agent(n_agents-2) in {
        prev_agent = get prev_agent.add( new Agent(n_agents-2) );	
	print("init agent: {}\n", n_agents);
	n_agents = n_agents -1;
      };
      get prev_agent.add(first_agent);
      
      --
      -- Run threadring
      --
      first_agent.pass(hops);
    }
  }
