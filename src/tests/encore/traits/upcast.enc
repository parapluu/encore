local trait Foo
  require var x : int
  def foo() : int
    this.x
  end
end
local trait Bar[t, u]
  def bar(x : Foo) : int
    x.foo()
  end
end
class C[t] : Foo + Bar[int, String]
  var x : int
  def init(x : int) : unit
    this.x = x
  end
end
active class Main
  def main() : unit
    let
      c = new C[int](42)
      d = c : Foo
      x = new C[int](42) : Foo
      y = new C[int](42) : Bar[int, String]
      z = c : Foo + Bar[int, String]
    in
      println(y.bar(x))
      println(z.bar(x))
      println("Done!")
    end
  end
end
