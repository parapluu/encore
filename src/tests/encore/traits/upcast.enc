trait Foo
  require x : int
  def foo() : int
    this.x

trait Bar<t, u>
  def bar(x : Foo) : int
    x.foo()

passive class C<t> : Foo + Bar<int, String>
  x : int
  def init(x : int) : void
    this.x = x


class Main
  def main() : void
    let c = new C<int>(42)
        d = c : Foo
        x = new C<int>(42) : Foo
        y = new C<int>(42) : Bar<int, String>
        z = c : Foo + Bar<int, String>
    in{
      print y.bar(x);
      print z.bar(x);
      print "Done!";
    }