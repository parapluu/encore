def multiDimAcces(): void {
  let arr = new [[int]](2) in
    repeat i <- |arr| {
      arr[i] = new [int](2);
      repeat j <- |arr[i]| {
        arr[i,j] = 2 * i + j;
        print arr[i,j]
      }
    }
}

class Foo
  def return() : [int]
    new [int](10)
  def foo(m:Main) : void
    let
      a = this.return()
    in {
      repeat i <- 10
        a[i] = i;
      m ! continue(a)
    }

class Main
  def continue(a:[int]) : void
    let
        b = ["foo", "bar"]
    in {
      repeat i <- |a|
        print a[i];
      print b[0];
      print b[1];
    }

  def main() : void
    let
      x = new Foo
    in {
      multiDimAcces();
      x ! foo(this)
      }
