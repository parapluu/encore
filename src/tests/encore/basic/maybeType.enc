def fun(x: Maybe int): Maybe int {
  Nothing : Maybe int
}

def another(x: Maybe int) : Maybe int {
 Nothing
}

def nothing(x: Maybe int) : int {
  let y = Nothing : Maybe int
      z = Just 32
  in {
    x = y;
    y = Just 23;
    y = x;
    y = z;
    x = Nothing : Maybe int;
    y;
    match x with {
    	Just z => 23
        Nothing => 34
    }
  }
}

def foo(): void
   (Nothing : Maybe int) == (Nothing : Maybe int)

class Main
  def main(): void
   let
     x = Just 32
   in {
      match (Nothing : Maybe int) with {
       (Just z) => 12
       Just 12 => 23
       Just 0 => 0
       Nothing => 22
      };
      match x with
       Just 32 => 1
       Nothing => 0
  }
