fun global(x : Foo) : unit
  println("In global")
end
read trait Foo
  require def id() : Maybe[Foo]
  def foo() : unit
    println("In Foo")
  end
end
read trait Bar
end
read trait Baz
end
class C1 : Foo + Bar
  def id() : Maybe[Foo]
    Just(this)
  end
end
class C2 : Foo + Baz
  def id() : Maybe[Foo]
    Just(this)
  end
end
class C3 : Baz + Foo
  def id() : Maybe[Foo]
    Just(this)
  end
end
active class Main
  def main() : unit
    val x = match 1 with
              case 0 =>
                new C1()
              end
              case 1 =>
                new C2()
              end
              case 2 =>
                new C3()
              end

            end
    match x with
      case id(y) =>
        y.foo()
        global(x)
      end

    end
  end
end
