
class Main
  check_arr: [bool]
  size: int

  def setup(): void {
    this.size = 2000;
    this.check_arr = new [bool](this.size);
    for v in [0..this.size] this.check_arr[v] = false;
  }

  def assert_all(): void
    for v in this.check_arr assertTrue(v, "Expected 'true' value in test")

  def assert_limits(): void {
    assertTrue(this.check_arr[0], "Expected 'true' value in array with index: 0");
    assertTrue(this.check_arr[this.size],
               "Exprected 'true' value in array with index: {}", this.size);
  }

  def main(): void {
    this.setup();
    let rng = [0..this.size]
        arr = new [int](this.size)
        size = this.size
    in {
        for i in rng arr[i] = i;

        -- synchronisation primitive:
        -- block until all items in Par have run the callback
        extract(each(arr) >> \(i: int) -> this.check_arr[i] = true);

        this.assert_limits();
        this.assert_all();
        };
  }
