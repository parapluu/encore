import ParT.ParT

fun liftValues(max : int) : Par[int]
  var p = empty[int]()
  repeat i <- max do
    p = p ||| liftv(i)
  end
  p
end

fun liftFutureValues(max : int) : Par[String]
  var p = empty[String]()
  repeat i <- max do
    p = p ||| liftf(new T!set(string_from_int(i)))
  end
  p
end

fun cmpS(x : String, y : String) : int
  x.compare(y)
end

fun toStr(x : int) : String
  string_from_int(x)
end

active class T
  def set(x : String) : String
    x
  end
end

active class Main
  def testValues() : unit
    println("Testing Values:")
    val f = max(liftValues(100) >> (toStr), cmpS)
    println("{}", get(f))
    println("{}", get(max(empty[String](), cmpS)))
  end

  def testFutures() : unit
    println("Testing Futures:")
    val f = max(liftFutureValues(100) ||| liftv("999"), cmpS)
    println("{}", get(f))
  end

  def main() : unit
    this.testValues()
    this.testFutures()
  end
end
