import Task
    
def sum(arr : [int], from:int, to:int) : int {
  var sum = 0 ;
  repeat i <- (to - from)
    sum = sum + arr[from + i] ;
  sum ;
}

def sum_async(arr : [int], from : int, to : int) : int 
  if to - from > (1024) then
    let
      pivot = from + ((to - from) / 2)
      left = async sum_async(arr, from, pivot)
      right = async sum_async(arr, pivot, to)
    in 
      (get left) + (get right) 
  else
      sum(arr, from, to) 

class Main
  def main() : void
    let
      size = 16 * 1024*1024
      array = new [int](size)
    in {
      repeat i <- |array|
        array[i] = 10; 

      print("Sum: {}\n", sum(array, 0, size));
    }
